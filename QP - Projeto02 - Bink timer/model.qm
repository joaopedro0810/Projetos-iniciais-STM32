<?xml version="1.0" encoding="UTF-8"?>
<model version="5.1.0" links="0">
 <framework name="qpc"/>
 <package name="AOs" stereotype="0x02">
  <class name="SMLed" superclass="qpc::QMActive">
   <attribute name="timer" type="QTimeEvt" visibility="0x00" properties="0x00"/>
   <statechart properties="0x01">
    <initial target="../1">
     <initial_glyph conn="4,2,5,0,2,2">
      <action box="0,-2,10,2"/>
     </initial_glyph>
    </initial>
    <state name="Desligado">
     <entry>QTimeEvt_armX(&amp;me-&gt;timer, BSP_TICKS_PER_SEC/10, BSP_TICKS_PER_SEC/10);</entry>
     <exit>QTimeEvt_disarm(&amp;me-&gt;timer);</exit>
     <tran trig="TIMEOUT">
      <action>ToggleLED();</action>
      <tran_glyph conn="4,20,3,-1,26">
       <action box="0,-2,26,4"/>
      </tran_glyph>
     </tran>
     <state_glyph node="4,4,72,42">
      <entry box="1,2,61,4"/>
      <exit box="1,6,25,4"/>
     </state_glyph>
    </state>
    <state_diagram size="80,50"/>
   </statechart>
  </class>
 </package>
 <directory name=".\Core\Inc">
  <file name="SMLed.h">
   <text>#ifndef SMLED_H
#define SMLED_H

#include &quot;qf_port.h&quot;
#include &quot;SharedData.h&quot;

$declare(AOs::SMLed)

void SMLed_ctor(void);

extern QMActive * const AO_SMLed;

#endif</text>
  </file>
  <file name="SharedData.h">
   <text>#ifndef SHAREDDATA_H
#define SHAREDDATA_H

#include &quot;qf_port.h&quot;

#define BSP_TICKS_PER_SEC 1000

// Enum de sinais.
enum signals
{
    TIMEOUT_SIG = Q_USER_SIG,

};

#endif</text>
  </file>
 </directory>
 <directory name=".\Core\Src">
  <file name="SMLed.c">
   <text>#include &quot;SMLed.h&quot;
#include &quot;SMLedActions.h&quot;
#include &quot;SharedData.h&quot;

static SMLed l_led; /* the sole instance of the SMLed active object */

/* Public-scope objects
----------------------------------------------------*/
QMActive * const AO_SMLed = (QMActive *)&amp;l_led; /* opaque pointer */

void SMLed_ctor(void)
{
    SMLed *me = &amp;l_led;
    
    // Construtor. Inicializa e coloca no estado inicial.
    QMActive_ctor(&amp;me-&gt;super, Q_STATE_CAST(&amp;SMLed_initial));
    QTimeEvt_ctorX(&amp;me-&gt;timer, (QActive *) &amp;me-&gt;super, TIMEOUT_SIG, 0U);
}

$define(AOs::SMLed)</text>
  </file>
 </directory>
</model>
